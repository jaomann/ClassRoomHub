@using ClassRoomHub.Web.ViewModels;
@using ClassroomHub.Web.ViewModels;
@model DeliveryViewModel;

<div class="course-edit">
    <div class="edit-content">
        <h5>Enviar atividade</h5>
        @{
            var students = (SelectList)ViewBag.Students;
        }

        <form method="post" asp-action="Details" asp-controller="Activity">
            <div clas="row mt-3">
                <div class="col-md-12">
                    @Html.DisplayNameFor(x => x.Description)
                    @Html.TextAreaFor(x => x.Description, new{Placeholder = "Descrição da atividade", Atrribute="width:100%", @class="form-control", @readonly=true})
                </div>
            </div>
            <div class="row mt-3">
                <div class="col-md-6">
                    @Html.DisplayNameFor(x => x)
                    @Html.TextBoxFor(x => x.Score, new{Placeholder = "Quanto vale?", Attribute="width:100%", @class="form-control", @readonly=true})
                </div>
            </div>
            <div class="row">
                <div style="background-color:white;" class="col-md-12 mt-4 p-2">
                    <h5>Informe aqui a solução</h5>
                    @Html.TextAreaFor(x => x.Solution, new{@class="form-control mt-3"})
                    <button type="submit" class="btn btn-success" style="width:120px">Enviar</button>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <h5>Você é?</h5>
                    @Html.DropDownListFor(x => x.StudentId, students, "Selecione seu nome: ", new{@class="form-control"})
                </div>
            </div>
        </form>
    </div>
</div>
@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}